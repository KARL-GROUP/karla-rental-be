{
  "openapi": "3.0.3",
  "info": {
    "title": "KARL Rental - OpenAPI 3.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://https://karla-rental-be-development.up.railway.app/api/"
    }
  ],
  "tags": [
    {
      "name": "cars",
      "description": "Handling cars"
    },
    {
      "name": "categories",
      "description": "Handling car categories"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "auth",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create new user",
        "description": "Create new user",
        "operationId": "Register",
        "requestBody": {
          "description": "Create new user",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Log in user",
        "description": "Log in user",
        "operationId": "Login",
        "requestBody": {
          "description": "Log in user",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "access_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": [
          "cars"
        ],
        "summary": "Add a new car to the database",
        "description": "Add a new car to the database",
        "operationId": "addCar",
        "requestBody": {
          "description": "Create a new car in the db",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/createCarSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "Get list of all cars",
        "description": "Get list of all cars",
        "operationId": "findCars",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/cars/{carId}": {
      "delete": {
        "tags": [
          "cars"
        ],
        "summary": "Deletes a car",
        "description": "delete a car",
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "Car id to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f570a575-291f-479a-a485-e97281c889fd"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid pet value"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Add a new category to the database",
        "description": "Add a new category to the database",
        "operationId": "addCategory",
        "requestBody": {
          "description": "Create a new category in the db",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/createCategorySchema"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCategorySchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get list of all categories",
        "description": "Get list of all categories",
        "operationId": "findCategories",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Deletes a category",
        "description": "delete a category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category id to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "f570a575-291f-479a-a485-e97281c889fd"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid pet value"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "imageSchema": {
        "type": "object",
        "properties": {
          "public_id": {
            "type": "string",
            "example": "karl-rental/cars/gascxet3c6flo1j8gova.jpg"
          },
          "url": {
            "type": "string",
            "format": "url",
            "example": "https://res.cloudinary.com/ddo4gczjn/image/upload/v1677975597/karl-rental/cars/gascxet3c6flo1j8gova.jpg"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "someone@gmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "********"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "someone@gmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "********"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "********"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f570a575-291f-479a-a485-e97281c889fd"
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "example": "2023-03-06T08:34:06.559Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date",
            "example": "2023-03-06T08:34:06.559Z"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "someone@gmail.com"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f570a575-291f-479a-a485-e97281c889fd"
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "example": "2023-03-06T08:34:06.559Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date",
            "example": "2023-03-06T08:34:06.559Z"
          },
          "name": {
            "type": "string",
            "example": "SUV"
          },
          "description": {
            "type": "string",
            "example": "This car was ...."
          }
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f570a575-291f-479a-a485-e97281c889fd"
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "example": "2023-03-06T08:34:06.559Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date",
            "example": "2023-03-06T08:34:06.559Z"
          },
          "name": {
            "type": "string",
            "example": "Landcruiser"
          },
          "description": {
            "type": "string",
            "example": "Description about the car"
          },
          "plate": {
            "type": "string",
            "example": "RAC000V"
          },
          "transmission": {
            "type": "string",
            "enum": [
              "automatic",
              "manual"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "example": 50
          },
          "seats": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "category": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "createCarSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "plate": {
            "type": "string",
            "example": "RAC000V"
          },
          "transmission": {
            "type": "string",
            "enum": [
              "automatic",
              "manual"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "example": 50
          },
          "seats": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "category": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "SUV",
              "SEDANS"
            ]
          }
        }
      },
      "createCategorySchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "petId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "example": "approved",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          },
          "address": {
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "xml": {
          "name": "customer"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "437 Lytton"
          },
          "city": {
            "type": "string",
            "example": "Palo Alto"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "94301"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}